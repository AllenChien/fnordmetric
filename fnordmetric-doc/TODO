
[ doc ]
    - FM legt die timestamps der samples _immer_ selbst bei dateneingang fest?
    - pictures in getting started server
    - make all the command in installation work
    - chart 2d/3d signature doc
    - all the doc links

[ SQL ]
    - find time constraint from sql query
    - scan samples with range / sstable binary search
    - SELECT count(*) ...
    - group over doc: GROUP OVER TIMEWINDOW(time_window, step) oder so
    - sql time helpers (1hour, etc)
    - sql: in
    - sql: if
    - sql: case

[ release ]
    - inline libev
    - svg: escape series names, labels!
    - functions: sum, avg, percentile, mean, variance, stddev, delta, nth_derivate,
    - round fn
    - bug: chart with only same values -> strange rendering
    - bug: multiple draw statements dont produce multiple charts
    - bug: NAN is not a valid value in SVG
    - bug: line chart with only negative values
    - bug: 2d area chart with explicit y domain, min > 0

-----

[ feature q ]
    - merge compaction
    - SQL: having
    - SQL: cross joins
    - SQL: subqueries
    - mysql: re-serialize where condition
    - mysql backend
    - hbase backend
    - SQL: JOIN
    - ui: line/point styles
    - impl inside/outside axis labels
    - impl rotated axis labels
    - series adapter: max interpolation gap
    - middle axis
    - impl variable axis label size
    - make # of axis ticks configurable via sql
    - set option: date format string
    - set option: timezone
    - set option: number format (si, exp, etc)
    - chart type: histogram
    - chart type: heatmap
    - ui: stacked area charts
    - mmap cache for readonly files
    - dashboard hosting (--dashboards <dir>)
    - alerts
    - events (annotations)
    - chart type: ganttchart
    - chart type: boxplot
    - chart type: error bars
    - chart type: pie chart
    - sparklines
    - postgresql backend
    - smooth paths
    - query cache
    - holtwinters
    - dashboard edit ui: html source
    - dashboard edit ui: wysiwyg
    - candlestick
    - sql: query plan optimizer. push limit/offset/order down into tablescan if
           no complex nodes inbetween
    - report with markdown + chartsql

[ refactor q ]
    - refactor nextRow(SValue* row, size_t len) -> nextRow(RowType) (std::vector<SValue>)
    - refactor tokenizer // dynamically register tokens
    - rename (axis|legend|grid)definition -> \1config

